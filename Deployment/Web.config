<?xml version="1.0" encoding="UTF-8"?>

<!-- 

This file contains all possible configuration options processed by Phalanger and PHP native extensions.
The values stated here are the default ones. If you are creating a configuration for your application,
state only those options which differ from the default values.

Notes:
Some option nodes can have specified a "scope" attribute. This is a string having one of the values 
"Any", "Runtime", "Build". The default value is "Any" if the attribute is omitted.
A node with "Runtime" and "Build" scope is ignored if the configuration file is loaded by the command line 
compiler and PHP application, respectively. "Any" value makes the node valid in both cases. 
All nodes on which the scope attribute is applicable has this attribute stated in this prototypical file.

-->

<configuration>

  <system.webServer>
    <handlers>
      <!-- Process .php files with Phalanger -->
      <add name="PhalangerHandler" path="*.php" verb="*" type="PHP.Core.RequestHandler, PhpNetCore, Version=4.0.0.0, Culture=neutral, PublicKeyToken=0a8e8c4c76728c71" resourceType="Unspecified" preCondition="integratedMode" />
    </handlers>
  </system.webServer>
  
	<!-- ASP.NET configuration -->
	<system.web>
		<!-- 
			Encoding of data sent from/to the client and encoding of the source files (.php, .aspx, .asax, .asmx). 
			
			The value should be one of the identifiers of the code-page supported by the system.
			These include e.g. values "Latin1", "Latin2", "Windows-1250" etc. Empty value means default system encoding. 
			
			Option has an application scope and cannot be changed in application sub-directories. 
			This setting is also recognized by the command line compiler (phpc) when precompiling a web application.
		-->
		<globalization requestEncoding="UTF-8" responseEncoding="UTF-8" fileEncoding="" />
	</system.web>

	<!-- Phalanger configuration -->
	<phpNet>
		<!-- 
			A list of libraries to load. Uncomment those which your application is using. 

			Use the following attribute to specify the library to add:
			  assembly="[name, version, culture, public key token]"
          
			Optional attribute (applicable only to Phalanger Class Library and Extensions):
			  section="[name of the configuration section for the library]"

			Recognized by the command line compiler (phpc).
		-->
		<classLibrary>

      <!-- Base Class Library -->
      <!-- add assembly="PhpNetClassLibrary, Version=4.0.0.0, Culture=neutral, PublicKeyToken=4af37afe3cde05fb" section="bcl" /-->

      <!-- optional CLR libraries -->
			<!--add assembly="mscorlib" /-->
			<!--add assembly="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" /-->
			<!--add assembly="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" /-->
			<!-- ... -->

			<!-- Bundled managed extensions -->
      <!--add assembly="PhpNetXmlDom, Version=4.0.0.0, Culture=neutral, PublicKeyToken=2771987119c16a03" section="xmldom"/-->
      <!--add assembly="PhpNetMsSql, Version=4.0.0.0, Culture=neutral, PublicKeyToken=2771987119c16a03" section="mssql"/-->
      <!--add assembly="PhpNetSQLite, Version=4.0.0.0, Culture=neutral, PublicKeyToken=2771987119c16a03" section="sqlite"/-->
      <!--add assembly="PhpNetZip, Version=4.0.0.0, Culture=neutral, PublicKeyToken=2771987119c16a03" section="zip"/-->
      <!--add assembly="PhpNetGd2, Version=4.0.0.0, Culture=neutral, PublicKeyToken=2771987119c16a03" section="gd2" /-->
      <!--add assembly="PhpNetZlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=2771987119c16a03" section="zlib" /-->
      <!--add assembly="PhpNetCurl, Version=4.0.0.0, Culture=neutral, PublicKeyToken=2771987119c16a03" section="curl" /-->
      <!--add assembly="PhpNetXml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=2771987119c16a03" section="xml" /-->
      <!--add assembly="PhpNetIconv, Version=4.0.0.0, Culture=neutral, PublicKeyToken=2771987119c16a03" section="iconv" /-->
      
      <!--add assembly="PhpNetPDO, Version=4.0.0.0, Culture=neutral, PublicKeyToken=2771987119c16a03" section="pdo" /-->
      <!--add assembly="PhpNetPDOSQLite, Version=4.0.0.0, Culture=neutral, PublicKeyToken=2771987119c16a03" section="pdosqlite" /-->
      <!--add assembly="PhpNetPDOSQLServer, Version=4.0.0.0, Culture=neutral, PublicKeyToken=2771987119c16a03" section="pdosqlsrv" /-->

      <!-- Separately distributed or 3rd party managed extensions (see http://www.devsense.com/products/phalanger) -->
      <!--add assembly="PhpNetMySql, Version=4.0.0.0, Culture=neutral, PublicKeyToken=2771987119c16a03" section="mysql"/-->
      <!--add assembly="PhpNetPDOMySQL, Version=4.0.0.0, Culture=neutral, PublicKeyToken=2771987119c16a03" section="pdomysql" /-->
      <!--add assembly="PhpNetMemcached, Version=4.0.0.0, Culture=neutral, PublicKeyToken=d4cd94916abb991b" section="memcached" /-->
		</classLibrary>

    <!--
      A list of script libraries that will be referenced.
      Scripts from these assemblies behave as they would be on file system.
      Even static inclusions targetting scripts inside these DLLs work.
      
      Script libraries are created by compiling PHP scripts with target:dll in legacy mode. (phpc /target:dll recurse:ext out:bin/ext.dll)
      
      Use following XML tag to add script library reference:
        <add url="file.dll" />
        <add assembly="ext, Version=1.0.0.0" />
    -->
    <scriptLibrary>
      <!-- <add url="bin/ext.dll" /> -->
      <!-- <add assembly="ext, Version=1.0.0.0" /> -->
    </scriptLibrary>

    <!-- 
			Compiler options. All options have application scope and cannot be changed in application sub-directories. 
			Recognized by the command line compiler (phpc).
		-->
		<compiler>
			<!-- 
			Enables or disables language features. Makes it possible to adjust compatibility with various versions of PHP. 
	        
			  - ShortOpenTags:    Allows the <? tag. Otherwise, only <?php and <script> tags are recognized.
			  - AspTags:          Allows ASP-style <% %> tags.
			  - V5Keywords:       Enables PHP5 new keywords (such as public, private, protected, clone, etc.)
			  - TypeKeywords:     Upgrades bool, int, int64, string, double, resource and object identifiers to keywords so that they can be used for type hints etc.
			  - UnicodeSemantics: Switches on the Unicode semantics as defined by PHP6.
			  - ClrSemantics:     Allows to treat values of PHP types as CLR objects (e.g. $s = "string"; $s->GetHashCode()).
        - CSharpTypeNames:  Enables PHP keywords that may be used in C# as class or namespace name, to be used in PHP code too. E.g. "List", "Array", "Abstract", ...
			  - Linq:             Enables Language Integrated Query (LINQ)
	        
			Aggregate features:
			  - Php4:             ShortOpenTags, AspTags
			  - Php5:             Php4, V5Keywords
			  - PhpClr:           Php5, UnicodeSemantics, TypeKeywords, Linq, ClrSemantics         
	          
			The default setting is Php5.
	        
			The feature can be added/removed from the list as indicated below by comments.
			-->
			<set name="LanguageFeatures">
				<!-- add value="ShortOpenTags" /-->
				<!-- add value="AspTags" /-->
				<!-- add value="UnicodeSemantics" /-->
				<!-- add value="V5Keywords" /-->
				<!-- add value="V6Keywords" /-->
				<!-- add value="TypeKeywords" /-->
				<!-- add value="ClrSemantics" /-->
        <!-- add value="CSharpTypeNames" /-->
				<!-- add value="Linq" /-->
			</set>

			<!-- Whether to compile scripts in debug mode. Per-application configuration. -->
			<set name="Debug" value="true" />

			<!-- Enables or disables compiler to make inclusions static. -->
			<set name="EnableStaticInclusions" value="false" scope="Any" />

      <!-- Force dynamic inclusion of specified paths. Directories or single files can be specified. -->
      <set name="ForcedDynamicInclusionPaths">
        <!-- add value="path" / -->
        <!-- remove value="path" / -->
        <!-- clear / -->
      </set>
      
      <!-- 
				List of semicolon-separated directory paths where the compiler searches for statically evaluated inclusion 
				targets. Applied also on results of inclusion mappings. Note, paths are relative to the application source root 
				in contrast to dynamic inclusion paths defined by <file-system>/IncludePaths configuration option.
			-->
			<set name="StaticIncludePaths" value="." />

			<!-- 
				List of regular expression patterns and replacements used for evaluation of static inclusions. 
		          
				  <add pattern="" value="" name="" /> - adds named mapping, names needn't to be unique 
				  <add pattern="" value="" />         - adds anonymous mapping 
				  <remove name=""/>                   - removes previously added named pattern 
				  <clear/>                            - clears the list
		        
				Patterns are .NET regular expressions, values are .NET replacement strings (see Regex.Match method).
				Mappings are evaluated one by one as stated in the list.
        
        Use ${SourceRoot} in value attribute as a variable representing current application root (can be overriden by /root:).
			-->
			<set name="InclusionMappings" >
			</set>

      <!--
        Allows disabling of watching for file system changes.
        By disabling this option, modified scripts won't be recompiled.
      -->
      <set name="WatchSourceChanges" value="true" />

      <!--
        When included or requested file is not found in any precompiled assembly, the file is located
        on file system and compiled lazily (if this option is set to false).
        By enabling this option, script files won't be loaded from file system. Only scripts compiled
        into DLLs would be loaded, Phalanger won't look at file system and won't recompile any script
        when physical file is changed.
        Enabling this option also implies WatchSourceChanges to be disabled.
      -->
      <set name="OnlyPrecompiledCode" value="false" />

      <!-- 
				Prepends a specified file before each compiled script. The included script is executed once at 
				the beginning of request or application execution. File is searched on paths specified by 
				StaticIncludePaths option if a relative path is specified. 
			-->
			<set name="PrependFile" value="" />

			<!-- 
				Appends a specified file after each compiled script. The included script is executed once at 
				the end of request or application execution. File is searched on paths specified by 
				StaticIncludePaths option if a relative path is specified. 
			-->
			<set name="AppendFile" value="" />

			<!-- 
				Specifies warnings that the compiler suppresses from reporting.
		        
				A list of comma separated disabled warning numbers can be specified by the optional attribute "numbers".
		        
				Additionally, multiple warnings belonging to a distinguished group can be disabled by 
				adding the following tags:
		        
				  <add value=""/>    - disables warnings of a specified group
				  <remove value=""/> - enables warnings of a specified group
				  <clear/>           - enables all warnings
		        
				You can list following groups and subgroups. 
		        
				- DeferredToRuntime:   warnings related to the fact that some script was not included at runtime. 
				  - InclusionsMapping: warnings reported when inclusion mapping (option IncludedFilesMapping) fails
				- CompilerStrict:      unreachable code detected warning etc. 
				  - AmpModifiers:      issues regarding ampersand modifiers (references) - Phalanger doesn't support 
									   ampersands in function calls; it ignors them and reports warnings 
		      
			-->
			<set name="DisabledWarnings" numbers="" scope="Any" >
				<add value="DeferredToRuntime"/>
				<add value="CompilerStrict"/>
			</set>

			<!-- 
				Console and Windows applications only.
				A path to the directory presented as a root of source files compiled to the application assembly. 
				Web application's source root is always its virtual directory. 
			-->
			<!-- set name="SourceRoot" value="" /-->

		</compiler>

		<globalization>
			<!-- 
				Encoding used for converting source files to Unicode and for run-time binary data conversions.
				When compiling or running a web application, defaults to the value specified by 
				system.web/globalization/@fileEncoding attribute.
			-->
			<set name="PageEncoding" value="" />
		</globalization>

		<variables>
			<!-- Whether to emulate Zend Engine 1 behavior. Not supported anymore. -->
      <!-- set name="ZendEngineV1Compatible" value="false" / -->

			<!-- Whether or not to register the EGPCS variables as global variables. -->
			<set name="RegisterGlobals" value="false" />

			<!-- Whether or not to register the "argc" and "argv" variables as global variables. -->
			<set name="RegisterArgcArgv" value="false" />

			<!-- Whether or not to register the "HTTP_*_VARS" arrays as global variables. -->
			<set name="RegisterLongArrays" value="false" />

			<!-- User callback called on failed serialization. Can be empty. -->
			<set name="DeserializationCallback" value="" />

      <!--
        Always populate the $HTTP_RAW_POST_DATA containing the raw POST data (value="true").
        However, the preferred method for accessing the raw POST data is php://input.
        $HTTP_RAW_POST_DATA is not available with enctype="multipart/form-data".
      -->
      <set name="AlwaysPopulateRawPostData" value="true" />
      
			<!-- 
				This directive describes the order in which PHP.NET registers EGPCS variables.
				Registration is done from left to right. The value should be a permutation of the "EGPCS" string. 
			-->
			<set name="RegisteringOrder" value="EGPCS"/>

			<!-- 
				For backwards compatibility only. Do not use if you can quote variables in code.
				Whether to quote GET/POST/Cookie variables' values when they are added to respective global arrays. 
			-->
			<set name="QuoteGpcVariables" value="false" />

			<!-- 
				For backwards compatibility only. Do not use if you can quote variables in code.
				Whether to quote values returned from some PHP functions. 
			-->
			<set name="QuoteRuntimeVariables" value="false" />

			<!-- 
				For backwards compatibility only. Do not use if you can quote variables in code.
				Whether to quote values in Sybase DB manner, i.e. using '' instead of \'. 
			-->
			<set name="QuoteInDbManner" value="false" />
		</variables>

		<output-control>
			<!-- Whether to start output buffering on the beginning of each script execution. -->
			<set name="OutputBuffering" value="false" />

			<!-- A user function which will filter buffered output. -->
			<set name="OutputHandler" value="" />

			<!-- Whether to send output to a client after a call of any function which generates output. -->
			<set name="ImplicitFlush" value="false" />

			<!-- If the following values are non-empty the Content-Type header with that values will be added to each response -->
			<set name="ContentType" value="text/html" />
			<set name="Charset" value="iso-8859-1" />
		</output-control>

		<request-control>
			<!-- Timeout in seconds for each phase of user code execution. -->
			<set name="ExecutionTimeout" value="30" />

			<!-- Whether not to terminate request on client disconnection. -->
			<set name="IgnoreUserAbort" value="true" />
		</request-control>

		<error-control>
			<!-- 
				A set of error types that should be reported.
				Subtags are processes in the order they are stated in the list. Valid subtags are: 
		        
				  <add value=""/>    - enables reporting of the specified type
				  <remove value=""/> - disables reporting of the specified type
				  <clear/>           - disables all errors
		        
				Valid names include 
				  Error,Warning,Notice,Strict,UserError,UserWarning,UserNotice,ParseError,CompileError,CompileWarning
			-->
			<set name="ReportErrors">
				<add value="Error"/>
				<add value="Warning"/>
				<add value="Notice"/>
				<add value="Strict"/>
				<add value="UserError"/>
				<add value="UserWarning"/>
				<add value="UserNotice"/>
				<add value="ParseError"/>
				<add value="CompileError"/>
				<add value="CompileWarning"/>
			</set>

			<!-- User handler called on error. -->
			<set name="UserHandler" value="" />

			<!-- User exception handler called on exception. -->
			<set name="UserExceptionHandler" value="" />

			<!-- Print out errors as a part of the output. -->
			<set name="DisplayErrors" value="true" />

			<!-- Whether error messages are reported in HTML format or plain text. -->
			<set name="HtmlMessages" value="true" />

			<!-- URI specifying the root of PHP manual used in error messages. -->
			<set name="DocRefRoot" value="http://www.php.net/manual" />

			<!-- An extension of PHP manual documents (should start with a dot character '.'). -->
			<set name="DocRefExtension" value=".php" />

			<!-- A file where to log errors if logging is enabled. Empty value disables error logging into a file. -->
			<set name="LogFile" value="" />

			<!-- Whether to log errors to the system event log if logging is enabled. -->
			<set name="SysLog" value="false" />

			<!-- Whether to log errors. -->
			<set name="EnableLogging" value="false" />

			<!-- A string to be output before an error message. -->
			<set name="ErrorPrependString" value="" />

			<!-- A string to be output after an error message. -->
			<set name="ErrorAppendString" value="" />

			<!-- Whether to report errors regardless of the operator @. For debugging purposes. -->
			<set name="IgnoreAtOperator" value="false" />
		</error-control>

		<session-control>
			<!-- Sessions are only available for web applications. -->

			<!-- Initialize session on request startup. -->
			<set name="AutoStart" value="false" />

			<!-- 
				Session handler. Each library can register own handler. 
				The default one, "aspnet", is implemented in Phalanger Core. 
				The "files" handler is registered by the Phalanger Base Class Library and implements 
				standard PHP files backed sessions. 
			-->
			<set name="Handler" value="aspnet" />

      <!--
        url_rewriter.tags specifies which HTML tags are rewritten to include session id
        if transparent sid support is enabled.
        Defaults to a=href,area=href,frame=src,input=src,form=fakeentry,fieldset=
      -->
      <set name="UrlRewriterTags" value="a=href,area=href,frame=src,input=src,form=,fieldset=" />
      
		</session-control>

		<assertion>
			<!-- Whether to evaluate assertions. -->
			<set name="Active" value="true"/>

			<!-- Whether a warning should be reported on failed assertion. -->
			<set name="ReportWarning" value="true" />

			<!-- Whether to terminate script execution on failed assertion. -->
			<set name="Terminate" value="false" />

			<!-- Whether assertion evaluation should report errors (including parse errors). -->
			<set name="Quiet" value=""/>

			<!-- User callback called on failed assertion. Can be empty. -->
			<set name="Callback" value="" />
		</assertion>

		<safe-mode>
			<!-- Whether safe mode restrictions are enabled. -->
			<set name="Enabled" value="false" />

			<!-- A semicolon separated list of file path prefixes which can be accessed via file system functions. 
           An empty value means no restrictions are applied. -->
			<set name="AllowedPathPrefixes" value="" />

			<!-- 
				Restricts programs execution on those which image is contained in the specified directory.
				An empty value means no restrictions are applied. 
			-->
			<set name="ExecutionDirectory" value="" />
		</safe-mode>

		<posted-files>
			<!-- Whether to allow HTTP file uploads. -->
			<set name="Accept" value="true"/>

			<!-- Temporary directory where posted files will be stored. Empty value means system temp directory. -->
			<set name="TempPath" value="C:\Temp\PHP.NET\PostedFiles" />
		</posted-files>

		<file-system>
			<!-- Whether file names can be specified as URL (and thus allows to use streams). -->
			<set name="AllowUrlFopen" value="true"/>

			<!-- Default timeout for socket based streams. -->
			<set name="DefaultSocketTimeout" value="60" />

			<!-- A user agent to send when communicating as client over HTTP. -->
			<set name="UserAgent" value="" />

			<!-- A password used when logging to FTP server as an anonymous client. -->
			<set name="AnonymousFtpPassword" value="" />

			<!-- 
				A default file open mode used when it is not specified in fopen() function explicitly. 
				You can specify either "b" for binary mode, "t" for text mode or empty value for no default value. 
			-->
			<set name="DefaultFileOpenMode" value="b" />

			<!-- A list of semicolon-separated directory paths where file system functions and dynamic inclusion 
           constructs will search for files. -->
			<set name="IncludePaths" value="." />
		</file-system>

		<bcl>
			<session>
				<!-- Sessions are only available for web applications. -->

				<!-- Set to "no-cache", "private" or "public" to determine HTTP caching aspects. -->
				<set name="CacheLimiter" value="no-cache" />

				<!-- Document expires after n minutes. -->
				<set name="CacheExpire" value="180" />

				<!-- 
				  A name of serializer used for serializing session data when persisting them to files.
				  Each library can register new serializer(s). The Phalanger Base Class Library registers
				  "php" (the same serialization as in original PHP) and "dotnet" (.NET binary serialization) 
				  serializers. The default is "php" to ensure backwards compatibility. 
				-->
				<set name="Serializer" value="php" />

				<!-- 
					A probability factor of invocation of old sessions collection. The probability of 
					collection is got by dividing the value with GcDivisor option value. 
				-->
				<set name="GcProbability" value="1" />

				<!-- A divisor for computing collection probability. -->
				<set name="GcDivisor" value="100" />

				<!-- A maximal session lifetime in seconds. -->
				<set name="GcMaxLifetime" value="1440" />

				<!-- 
					A path to directory where session files are stored. The path is considered relativelly
					to the current working directory in the time when the file is opened. Empty value means
					the system temporary directory. Directory levels described in PHP manual are not supported. 
				-->
				<set name="SavePath" value="" />

				<!-- Session cookie properties. -->
				<set name="CookieLifetime" value="0" />
				<set name="CookiePath" value="/" />
				<set name="CookieDomain" value="" />
				<set name="CookieSecure" value="false"/>
			</session>

			<mailer>
				<!-- SMTP server name used for sending e-mails. -->
				<set name="SmtpServer" value="localhost" />

				<!-- SMTP server port used for sending e-mails. -->
				<set name="SmtpPort" value="25" />

				<!-- The default value of "From" header. -->
				<set name="DefaultFromHeader" value="phalanger@localhost.cz" />

        <!-- Whether to add 'X-PHP-Originating-Script' header to the sent e-mails. -->
        <set name="AddXHeader" value="false" />
			</mailer>

			<date>
				<!-- Default latitude (used for calculating sunrise and sunset times). -->
				<set name="Latitude" value="31.7667" />

				<!-- Default longitude (used for calculating sunrise and sunset times). -->
				<set name="Longitude" value="35.2333" />

				<!-- Default longitude (used for calculating sunrise and sunset times). -->
				<set name="SunsetZenith" value="90.83" />

				<!-- Default longitude (used for calculating sunrise and sunset times). -->
				<set name="SunriseZenith" value="90.83" />

				<!-- Default timezone used by time-zone functions. -->
				<set name="TimeZone" value="" />
			</date>

			<highlighting>
				<!-- Background color. -->
				<set name="Background" value="white" />

				<!-- String color. -->
				<set name="String" value="navy" />

				<!-- Comment color. -->
				<set name="Comment" value="green" />

				<!-- Keyword color. -->
				<set name="Keyword" value="blue" />

				<!-- Outer html code color. -->
				<set name="Html" value="gray" />

				<!-- Default text color. -->
				<set name="Default" value="black" />

				<!-- Color of script tags. -->
				<set name="ScriptTags" value="red" />
			</highlighting>
		</bcl>

		<mssql>
			<!-- Use NT authentication when connecting to the server. -->
			<set name="NTAuthentication" value="false" />

			<!-- Time in seconds to wait for connection to the server. -->
			<set name="ConnectTimeout" value="5" />

			<!-- Timeout in seconds for commands. Negative value or zero means no timeout. -->
			<set name="Timeout" value="60" />

			<!-- 
				Limit for the number of simoultaneous connections that the application can establish.
				Negative value means no limit.
			-->
			<set name="MaxConnections" value="-1" />
		</mssql>

    <iconv>
      <set name="InputEncoding" value="Windows-1250" />
      <set name="OutputEncoding" value="Windows-1250" />
      <set name="InternalEncoding" value="UTF-8" />
    </iconv>

	</phpNet>

</configuration>
