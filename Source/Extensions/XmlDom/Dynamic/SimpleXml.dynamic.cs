// ***
// Do not edit this file. It has been generated by the ClassDynamizer tool.
// ***
#pragma warning disable 0108
using System;
using System.IO;
using System.Xml;
using System.Xml.XPath;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using PHP.Core;
using PHP.Core.Reflection;
namespace PHP.Library.Xml
{
	[Serializable()]
	public partial class SimpleXMLElement : PhpObject
	{
		protected SimpleXMLElement(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : base(info, context)
		{
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public SimpleXMLElement(ScriptContext context, bool newInstance) : base(context, newInstance)
		{
			this.iterationType = IterationType.ChildElements;
			this.iterationNamespace = IterationNamespace.CreateWithPrefix(string.Empty, null);
			this.className = null;
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public SimpleXMLElement(ScriptContext context, DTypeDesc caller) : this(context, true)
		{
			this.InvokeConstructor(context, caller);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public object __construct(ScriptContext __context, object data, 		[System.Runtime.InteropServices.OptionalAttribute()]
object options, 		[System.Runtime.InteropServices.OptionalAttribute()]
object dataIsUrl)
		{
			
			string tmp1 = PhpVariable.AsString(data);
			if (tmp1 == null)

				{
					PhpException.InvalidImplicitCast(data, "string", "__construct");
					return null;
				}
			
			int tmp2;
			if (options != Arg.Default)

				{
					if (!(options is int))

						{
							PhpException.InvalidImplicitCast(options, "int", "__construct");
							return null;
						}
					tmp2 = (int)options;
				}
			else
tmp2 = new int();
			
			bool tmp3;
			if (dataIsUrl != Arg.Default)

				{
					if (!(dataIsUrl is bool))

						{
							PhpException.InvalidImplicitCast(dataIsUrl, "bool", "__construct");
							return null;
						}
					tmp3 = (bool)dataIsUrl;
				}
			else
tmp3 = new bool();
			__construct(tmp1, tmp2, tmp3);
			return null;
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object __construct(object instance, PhpStack stack)
		{
			stack.CalleeName = "__construct";
			
			object arg1 = stack.PeekValue(1);
			
			object arg2 = stack.PeekValueOptional(2);
			
			object arg3 = stack.PeekValueOptional(3);
			stack.RemoveFrame();
			return ((SimpleXMLElement)instance).__construct(stack.Context, arg1, arg2, arg3);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public object asXML(ScriptContext __context, 		[System.Runtime.InteropServices.OptionalAttribute()]
object fileName)
		{
			
			string tmp1 = null;
			if (fileName != Arg.Default)

				{
					tmp1 = PhpVariable.AsString(fileName);
					if (tmp1 == null)

						{
							PhpException.InvalidImplicitCast(fileName, "string", "asXML");
							return null;
						}
				}
			return asXML(tmp1);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object asXML(object instance, PhpStack stack)
		{
			stack.CalleeName = "asXML";
			
			object arg1 = stack.PeekValueOptional(1);
			stack.RemoveFrame();
			return ((SimpleXMLElement)instance).asXML(stack.Context, arg1);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public object xpath(ScriptContext __context, object path)
		{
			
			string tmp1 = PhpVariable.AsString(path);
			if (tmp1 == null)

				{
					PhpException.InvalidImplicitCast(path, "string", "xpath");
					return null;
				}
			return xpath(tmp1);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object xpath(object instance, PhpStack stack)
		{
			stack.CalleeName = "xpath";
			
			object arg1 = stack.PeekValue(1);
			stack.RemoveFrame();
			return ((SimpleXMLElement)instance).xpath(stack.Context, arg1);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public object registerXPathNamespace(ScriptContext __context, object prefix, object namespaceUri)
		{
			
			string tmp1 = PhpVariable.AsString(prefix);
			if (tmp1 == null)

				{
					PhpException.InvalidImplicitCast(prefix, "string", "registerXPathNamespace");
					return null;
				}
			
			string tmp2 = PhpVariable.AsString(namespaceUri);
			if (tmp2 == null)

				{
					PhpException.InvalidImplicitCast(namespaceUri, "string", "registerXPathNamespace");
					return null;
				}
			return registerXPathNamespace(tmp1, tmp2);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object registerXPathNamespace(object instance, PhpStack stack)
		{
			stack.CalleeName = "registerXPathNamespace";
			
			object arg1 = stack.PeekValue(1);
			
			object arg2 = stack.PeekValue(2);
			stack.RemoveFrame();
			return ((SimpleXMLElement)instance).registerXPathNamespace(stack.Context, arg1, arg2);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public object attributes(ScriptContext __context, 		[System.Runtime.InteropServices.OptionalAttribute()]
object ns, 		[System.Runtime.InteropServices.OptionalAttribute()]
object isPrefix)
		{
			
			string tmp1 = null;
			if (ns != Arg.Default)

				{
					tmp1 = PhpVariable.AsString(ns);
					if (tmp1 == null)

						{
							PhpException.InvalidImplicitCast(ns, "string", "attributes");
							return null;
						}
				}
			
			bool tmp2;
			if (isPrefix != Arg.Default)

				{
					if (!(isPrefix is bool))

						{
							PhpException.InvalidImplicitCast(isPrefix, "bool", "attributes");
							return null;
						}
					tmp2 = (bool)isPrefix;
				}
			else
tmp2 = new bool();
			return attributes(tmp1, tmp2);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object attributes(object instance, PhpStack stack)
		{
			stack.CalleeName = "attributes";
			
			object arg1 = stack.PeekValueOptional(1);
			
			object arg2 = stack.PeekValueOptional(2);
			stack.RemoveFrame();
			return ((SimpleXMLElement)instance).attributes(stack.Context, arg1, arg2);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public object children(ScriptContext __context, 		[System.Runtime.InteropServices.OptionalAttribute()]
object ns, 		[System.Runtime.InteropServices.OptionalAttribute()]
object isPrefix)
		{
			
			string tmp1 = null;
			if (ns != Arg.Default)

				{
					tmp1 = PhpVariable.AsString(ns);
					if (tmp1 == null)

						{
							PhpException.InvalidImplicitCast(ns, "string", "children");
							return null;
						}
				}
			
			bool tmp2;
			if (isPrefix != Arg.Default)

				{
					if (!(isPrefix is bool))

						{
							PhpException.InvalidImplicitCast(isPrefix, "bool", "children");
							return null;
						}
					tmp2 = (bool)isPrefix;
				}
			else
tmp2 = new bool();
			return children(tmp1, tmp2);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object children(object instance, PhpStack stack)
		{
			stack.CalleeName = "children";
			
			object arg1 = stack.PeekValueOptional(1);
			
			object arg2 = stack.PeekValueOptional(2);
			stack.RemoveFrame();
			return ((SimpleXMLElement)instance).children(stack.Context, arg1, arg2);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public object getNamespaces(ScriptContext __context, 		[System.Runtime.InteropServices.OptionalAttribute()]
object recursive)
		{
			
			bool tmp1;
			if (recursive != Arg.Default)

				{
					if (!(recursive is bool))

						{
							PhpException.InvalidImplicitCast(recursive, "bool", "getNamespaces");
							return null;
						}
					tmp1 = (bool)recursive;
				}
			else
tmp1 = new bool();
			return getNamespaces(tmp1);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object getNamespaces(object instance, PhpStack stack)
		{
			stack.CalleeName = "getNamespaces";
			
			object arg1 = stack.PeekValueOptional(1);
			stack.RemoveFrame();
			return ((SimpleXMLElement)instance).getNamespaces(stack.Context, arg1);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public object getDocNamespaces(ScriptContext __context, 		[System.Runtime.InteropServices.OptionalAttribute()]
object recursive)
		{
			
			bool tmp1;
			if (recursive != Arg.Default)

				{
					if (!(recursive is bool))

						{
							PhpException.InvalidImplicitCast(recursive, "bool", "getDocNamespaces");
							return null;
						}
					tmp1 = (bool)recursive;
				}
			else
tmp1 = new bool();
			return getDocNamespaces(tmp1);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object getDocNamespaces(object instance, PhpStack stack)
		{
			stack.CalleeName = "getDocNamespaces";
			
			object arg1 = stack.PeekValueOptional(1);
			stack.RemoveFrame();
			return ((SimpleXMLElement)instance).getDocNamespaces(stack.Context, arg1);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public object getName(ScriptContext __context)
		{
			return getName();
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object getName(object instance, PhpStack stack)
		{
			stack.CalleeName = "getName";
			stack.RemoveFrame();
			return ((SimpleXMLElement)instance).getName(stack.Context);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public object addChild(ScriptContext __context, object qualifiedName, 		[System.Runtime.InteropServices.OptionalAttribute()]
object value, 		[System.Runtime.InteropServices.OptionalAttribute()]
object namespaceUri)
		{
			
			string tmp1 = PhpVariable.AsString(qualifiedName);
			if (tmp1 == null)

				{
					PhpException.InvalidImplicitCast(qualifiedName, "string", "addChild");
					return null;
				}
			
			string tmp2 = null;
			if (value != Arg.Default)

				{
					tmp2 = PhpVariable.AsString(value);
					if (tmp2 == null)

						{
							PhpException.InvalidImplicitCast(value, "string", "addChild");
							return null;
						}
				}
			
			string tmp3 = null;
			if (namespaceUri != Arg.Default)

				{
					tmp3 = PhpVariable.AsString(namespaceUri);
					if (tmp3 == null)

						{
							PhpException.InvalidImplicitCast(namespaceUri, "string", "addChild");
							return null;
						}
				}
			return addChild(tmp1, tmp2, tmp3);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object addChild(object instance, PhpStack stack)
		{
			stack.CalleeName = "addChild";
			
			object arg1 = stack.PeekValue(1);
			
			object arg2 = stack.PeekValueOptional(2);
			
			object arg3 = stack.PeekValueOptional(3);
			stack.RemoveFrame();
			return ((SimpleXMLElement)instance).addChild(stack.Context, arg1, arg2, arg3);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public object addAttribute(ScriptContext __context, object qualifiedName, object value, 		[System.Runtime.InteropServices.OptionalAttribute()]
object namespaceUri)
		{
			
			string tmp1 = PhpVariable.AsString(qualifiedName);
			if (tmp1 == null)

				{
					PhpException.InvalidImplicitCast(qualifiedName, "string", "addAttribute");
					return null;
				}
			
			string tmp2 = PhpVariable.AsString(value);
			if (tmp2 == null)

				{
					PhpException.InvalidImplicitCast(value, "string", "addAttribute");
					return null;
				}
			
			string tmp3 = null;
			if (namespaceUri != Arg.Default)

				{
					tmp3 = PhpVariable.AsString(namespaceUri);
					if (tmp3 == null)

						{
							PhpException.InvalidImplicitCast(namespaceUri, "string", "addAttribute");
							return null;
						}
				}
			addAttribute(tmp1, tmp2, tmp3);
			return null;
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object addAttribute(object instance, PhpStack stack)
		{
			stack.CalleeName = "addAttribute";
			
			object arg1 = stack.PeekValue(1);
			
			object arg2 = stack.PeekValue(2);
			
			object arg3 = stack.PeekValueOptional(3);
			stack.RemoveFrame();
			return ((SimpleXMLElement)instance).addAttribute(stack.Context, arg1, arg2, arg3);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public object offsetGet(ScriptContext __context, object index)
		{
			return offsetGet(index);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object offsetGet(object instance, PhpStack stack)
		{
			stack.CalleeName = "offsetGet";
			
			object arg1 = stack.PeekValue(1);
			stack.RemoveFrame();
			return ((SimpleXMLElement)instance).offsetGet(stack.Context, arg1);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public object offsetSet(ScriptContext __context, object index, object value)
		{
			return offsetSet(index, value);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object offsetSet(object instance, PhpStack stack)
		{
			stack.CalleeName = "offsetSet";
			
			object arg1 = stack.PeekValue(1);
			
			object arg2 = stack.PeekValue(2);
			stack.RemoveFrame();
			return ((SimpleXMLElement)instance).offsetSet(stack.Context, arg1, arg2);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public object offsetUnset(ScriptContext __context, object index)
		{
			return offsetUnset(index);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object offsetUnset(object instance, PhpStack stack)
		{
			stack.CalleeName = "offsetUnset";
			
			object arg1 = stack.PeekValue(1);
			stack.RemoveFrame();
			return ((SimpleXMLElement)instance).offsetUnset(stack.Context, arg1);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public object offsetExists(ScriptContext __context, object index)
		{
			return offsetExists(index);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object offsetExists(object instance, PhpStack stack)
		{
			stack.CalleeName = "offsetExists";
			
			object arg1 = stack.PeekValue(1);
			stack.RemoveFrame();
			return ((SimpleXMLElement)instance).offsetExists(stack.Context, arg1);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public object count(ScriptContext __context)
		{
			return count();
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object count(object instance, PhpStack stack)
		{
			stack.CalleeName = "count";
			stack.RemoveFrame();
			return ((SimpleXMLElement)instance).count(stack.Context);
		}
		private static void __PopulateTypeDesc(PhpTypeDesc desc)
		{
			desc.AddMethod("__construct", PhpMemberAttributes.Public, new RoutineDelegate(SimpleXMLElement.__construct));
			desc.AddMethod("asXML", PhpMemberAttributes.Public, new RoutineDelegate(SimpleXMLElement.asXML));
			desc.AddMethod("xpath", PhpMemberAttributes.Public, new RoutineDelegate(SimpleXMLElement.xpath));
			desc.AddMethod("registerXPathNamespace", PhpMemberAttributes.Public, new RoutineDelegate(SimpleXMLElement.registerXPathNamespace));
			desc.AddMethod("attributes", PhpMemberAttributes.Public, new RoutineDelegate(SimpleXMLElement.attributes));
			desc.AddMethod("children", PhpMemberAttributes.Public, new RoutineDelegate(SimpleXMLElement.children));
			desc.AddMethod("getNamespaces", PhpMemberAttributes.Public, new RoutineDelegate(SimpleXMLElement.getNamespaces));
			desc.AddMethod("getDocNamespaces", PhpMemberAttributes.Public, new RoutineDelegate(SimpleXMLElement.getDocNamespaces));
			desc.AddMethod("getName", PhpMemberAttributes.Public, new RoutineDelegate(SimpleXMLElement.getName));
			desc.AddMethod("addChild", PhpMemberAttributes.Public, new RoutineDelegate(SimpleXMLElement.addChild));
			desc.AddMethod("addAttribute", PhpMemberAttributes.Public, new RoutineDelegate(SimpleXMLElement.addAttribute));
			desc.AddMethod("offsetGet", PhpMemberAttributes.Public, new RoutineDelegate(SimpleXMLElement.offsetGet));
			desc.AddMethod("offsetSet", PhpMemberAttributes.Public, new RoutineDelegate(SimpleXMLElement.offsetSet));
			desc.AddMethod("offsetUnset", PhpMemberAttributes.Public, new RoutineDelegate(SimpleXMLElement.offsetUnset));
			desc.AddMethod("offsetExists", PhpMemberAttributes.Public, new RoutineDelegate(SimpleXMLElement.offsetExists));
			desc.AddMethod("count", PhpMemberAttributes.Public, new RoutineDelegate(SimpleXMLElement.count));
		}
	}
}
