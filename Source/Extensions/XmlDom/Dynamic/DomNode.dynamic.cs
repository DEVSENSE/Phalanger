// ***
// Do not edit this file. It has been generated by the ClassDynamizer tool.
// ***
#pragma warning disable 0108
using System;
using System.Xml;
using System.Xml.Schema;
using System.Text;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using PHP.Core;
using PHP.Core.Reflection;
namespace PHP.Library.Xml
{
	[Serializable()]
	public partial class DOMNode : PhpObject
	{
		protected DOMNode(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : base(info, context)
		{
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public DOMNode(ScriptContext context, bool newInstance) : base(context, newInstance)
		{
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public DOMNode(ScriptContext context, DTypeDesc caller) : this(context, true)
		{
			this.InvokeConstructor(context, caller);
		}
		private static object __get_nodeName(object instance)
		{
			return ((DOMNode)instance).nodeName;
		}
		private static object __get_nodeValue(object instance)
		{
			return ((DOMNode)instance).nodeValue;
		}
		private static void __set_nodeValue(object instance, object value)
		{
			((DOMNode)instance).nodeValue = value;
		}
		private static object __get_nodeType(object instance)
		{
			return ((DOMNode)instance).nodeType;
		}
		private static object __get_parentNode(object instance)
		{
			return ((DOMNode)instance).parentNode;
		}
		private static object __get_childNodes(object instance)
		{
			return ((DOMNode)instance).childNodes;
		}
		private static object __get_firstChild(object instance)
		{
			return ((DOMNode)instance).firstChild;
		}
		private static object __get_lastChild(object instance)
		{
			return ((DOMNode)instance).lastChild;
		}
		private static object __get_previousSibling(object instance)
		{
			return ((DOMNode)instance).previousSibling;
		}
		private static object __get_nextSibling(object instance)
		{
			return ((DOMNode)instance).nextSibling;
		}
		private static object __get_attributes(object instance)
		{
			return ((DOMNode)instance).attributes;
		}
		private static object __get_ownerDocument(object instance)
		{
			return ((DOMNode)instance).ownerDocument;
		}
		private static object __get_namespaceURI(object instance)
		{
			return ((DOMNode)instance).namespaceURI;
		}
		private static object __get_prefix(object instance)
		{
			return ((DOMNode)instance).prefix;
		}
		private static void __set_prefix(object instance, object value)
		{
			((DOMNode)instance).prefix = value;
		}
		private static object __get_localName(object instance)
		{
			return ((DOMNode)instance).localName;
		}
		private static object __get_baseURI(object instance)
		{
			return ((DOMNode)instance).baseURI;
		}
		private static object __get_textContent(object instance)
		{
			return ((DOMNode)instance).textContent;
		}
		private static void __set_textContent(object instance, object value)
		{
			((DOMNode)instance).textContent = value;
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public object insertBefore(ScriptContext __context, object newNode, 		[System.Runtime.InteropServices.OptionalAttribute()]
object refNode)
		{
			
			DOMNode tmp1 = newNode as DOMNode;
			if (tmp1 == null)

				{
					PhpException.InvalidImplicitCast(newNode, "DOMNode", "insertBefore");
					return null;
				}
			
			DOMNode tmp2 = null;
			if (refNode != Arg.Default)

				{
					tmp2 = refNode as DOMNode;
					if (tmp2 == null && refNode != null)

						{
							PhpException.InvalidImplicitCast(refNode, "DOMNode", "insertBefore");
							return null;
						}
				}
			return insertBefore(tmp1, tmp2);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object insertBefore(object instance, PhpStack stack)
		{
			stack.CalleeName = "insertBefore";
			
			object arg1 = stack.PeekValue(1);
			
			object arg2 = stack.PeekValueOptional(2);
			stack.RemoveFrame();
			return ((DOMNode)instance).insertBefore(stack.Context, arg1, arg2);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public object replaceChild(ScriptContext __context, object newNode, object oldNode)
		{
			
			DOMNode tmp1 = newNode as DOMNode;
			if (tmp1 == null)

				{
					PhpException.InvalidImplicitCast(newNode, "DOMNode", "replaceChild");
					return null;
				}
			
			DOMNode tmp2 = oldNode as DOMNode;
			if (tmp2 == null)

				{
					PhpException.InvalidImplicitCast(oldNode, "DOMNode", "replaceChild");
					return null;
				}
			return replaceChild(tmp1, tmp2);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object replaceChild(object instance, PhpStack stack)
		{
			stack.CalleeName = "replaceChild";
			
			object arg1 = stack.PeekValue(1);
			
			object arg2 = stack.PeekValue(2);
			stack.RemoveFrame();
			return ((DOMNode)instance).replaceChild(stack.Context, arg1, arg2);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public object appendChild(ScriptContext __context, object newNode)
		{
			
			DOMNode tmp1 = newNode as DOMNode;
			if (tmp1 == null)

				{
					PhpException.InvalidImplicitCast(newNode, "DOMNode", "appendChild");
					return null;
				}
			return appendChild(tmp1);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object appendChild(object instance, PhpStack stack)
		{
			stack.CalleeName = "appendChild";
			
			object arg1 = stack.PeekValue(1);
			stack.RemoveFrame();
			return ((DOMNode)instance).appendChild(stack.Context, arg1);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public object removeChild(ScriptContext __context, object oldNode)
		{
			
			DOMNode tmp1 = oldNode as DOMNode;
			if (tmp1 == null)

				{
					PhpException.InvalidImplicitCast(oldNode, "DOMNode", "removeChild");
					return null;
				}
			return removeChild(tmp1);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object removeChild(object instance, PhpStack stack)
		{
			stack.CalleeName = "removeChild";
			
			object arg1 = stack.PeekValue(1);
			stack.RemoveFrame();
			return ((DOMNode)instance).removeChild(stack.Context, arg1);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public object hasChildNodes(ScriptContext __context)
		{
			return hasChildNodes();
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object hasChildNodes(object instance, PhpStack stack)
		{
			stack.CalleeName = "hasChildNodes";
			stack.RemoveFrame();
			return ((DOMNode)instance).hasChildNodes(stack.Context);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public object hasAttributes(ScriptContext __context)
		{
			return hasAttributes();
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object hasAttributes(object instance, PhpStack stack)
		{
			stack.CalleeName = "hasAttributes";
			stack.RemoveFrame();
			return ((DOMNode)instance).hasAttributes(stack.Context);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public object lookupPrefix(ScriptContext __context, object namespaceUri)
		{
			
			string tmp1 = PhpVariable.AsString(namespaceUri);
			if (tmp1 == null)

				{
					PhpException.InvalidImplicitCast(namespaceUri, "string", "lookupPrefix");
					return null;
				}
			return lookupPrefix(tmp1);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object lookupPrefix(object instance, PhpStack stack)
		{
			stack.CalleeName = "lookupPrefix";
			
			object arg1 = stack.PeekValue(1);
			stack.RemoveFrame();
			return ((DOMNode)instance).lookupPrefix(stack.Context, arg1);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public object lookupNamespaceUri(ScriptContext __context, object prefix)
		{
			
			string tmp1 = PhpVariable.AsString(prefix);
			if (tmp1 == null)

				{
					PhpException.InvalidImplicitCast(prefix, "string", "lookupNamespaceUri");
					return null;
				}
			return lookupNamespaceUri(tmp1);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object lookupNamespaceUri(object instance, PhpStack stack)
		{
			stack.CalleeName = "lookupNamespaceUri";
			
			object arg1 = stack.PeekValue(1);
			stack.RemoveFrame();
			return ((DOMNode)instance).lookupNamespaceUri(stack.Context, arg1);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public object isDefaultNamespace(ScriptContext __context, object namespaceUri)
		{
			
			string tmp1 = PhpVariable.AsString(namespaceUri);
			if (tmp1 == null)

				{
					PhpException.InvalidImplicitCast(namespaceUri, "string", "isDefaultNamespace");
					return null;
				}
			return isDefaultNamespace(tmp1);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object isDefaultNamespace(object instance, PhpStack stack)
		{
			stack.CalleeName = "isDefaultNamespace";
			
			object arg1 = stack.PeekValue(1);
			stack.RemoveFrame();
			return ((DOMNode)instance).isDefaultNamespace(stack.Context, arg1);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public object normalize(ScriptContext __context)
		{
			normalize();
			return null;
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object normalize(object instance, PhpStack stack)
		{
			stack.CalleeName = "normalize";
			stack.RemoveFrame();
			return ((DOMNode)instance).normalize(stack.Context);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public object cloneNode(ScriptContext __context, 		[System.Runtime.InteropServices.OptionalAttribute()]
object deep)
		{
			
			bool tmp1;
			if (deep != Arg.Default)

				{
					if (!(deep is bool))

						{
							PhpException.InvalidImplicitCast(deep, "bool", "cloneNode");
							return null;
						}
					tmp1 = (bool)deep;
				}
			else
tmp1 = new bool();
			return cloneNode(tmp1);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object cloneNode(object instance, PhpStack stack)
		{
			stack.CalleeName = "cloneNode";
			
			object arg1 = stack.PeekValueOptional(1);
			stack.RemoveFrame();
			return ((DOMNode)instance).cloneNode(stack.Context, arg1);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public object isSameNode(ScriptContext __context, object anotherNode)
		{
			
			DOMNode tmp1 = anotherNode as DOMNode;
			if (tmp1 == null)

				{
					PhpException.InvalidImplicitCast(anotherNode, "DOMNode", "isSameNode");
					return null;
				}
			return isSameNode(tmp1);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object isSameNode(object instance, PhpStack stack)
		{
			stack.CalleeName = "isSameNode";
			
			object arg1 = stack.PeekValue(1);
			stack.RemoveFrame();
			return ((DOMNode)instance).isSameNode(stack.Context, arg1);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public object isSupported(ScriptContext __context, object feature, object version)
		{
			
			string tmp1 = PhpVariable.AsString(feature);
			if (tmp1 == null)

				{
					PhpException.InvalidImplicitCast(feature, "string", "isSupported");
					return null;
				}
			
			string tmp2 = PhpVariable.AsString(version);
			if (tmp2 == null)

				{
					PhpException.InvalidImplicitCast(version, "string", "isSupported");
					return null;
				}
			return isSupported(tmp1, tmp2);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object isSupported(object instance, PhpStack stack)
		{
			stack.CalleeName = "isSupported";
			
			object arg1 = stack.PeekValue(1);
			
			object arg2 = stack.PeekValue(2);
			stack.RemoveFrame();
			return ((DOMNode)instance).isSupported(stack.Context, arg1, arg2);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public object getFeature(ScriptContext __context, object feature, object version)
		{
			
			string tmp1 = PhpVariable.AsString(feature);
			if (tmp1 == null)

				{
					PhpException.InvalidImplicitCast(feature, "string", "getFeature");
					return null;
				}
			
			string tmp2 = PhpVariable.AsString(version);
			if (tmp2 == null)

				{
					PhpException.InvalidImplicitCast(version, "string", "getFeature");
					return null;
				}
			getFeature(tmp1, tmp2);
			return null;
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object getFeature(object instance, PhpStack stack)
		{
			stack.CalleeName = "getFeature";
			
			object arg1 = stack.PeekValue(1);
			
			object arg2 = stack.PeekValue(2);
			stack.RemoveFrame();
			return ((DOMNode)instance).getFeature(stack.Context, arg1, arg2);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public object getUserData(ScriptContext __context, object key)
		{
			
			string tmp1 = PhpVariable.AsString(key);
			if (tmp1 == null)

				{
					PhpException.InvalidImplicitCast(key, "string", "getUserData");
					return null;
				}
			getUserData(tmp1);
			return null;
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object getUserData(object instance, PhpStack stack)
		{
			stack.CalleeName = "getUserData";
			
			object arg1 = stack.PeekValue(1);
			stack.RemoveFrame();
			return ((DOMNode)instance).getUserData(stack.Context, arg1);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public object setUserData(ScriptContext __context, object key, object data, object handler)
		{
			
			string tmp1 = PhpVariable.AsString(key);
			if (tmp1 == null)

				{
					PhpException.InvalidImplicitCast(key, "string", "setUserData");
					return null;
				}
			
			DOMUserDataHandler tmp3 = handler as DOMUserDataHandler;
			if (tmp3 == null)

				{
					PhpException.InvalidImplicitCast(handler, "DOMUserDataHandler", "setUserData");
					return null;
				}
			setUserData(tmp1, data, tmp3);
			return null;
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object setUserData(object instance, PhpStack stack)
		{
			stack.CalleeName = "setUserData";
			
			object arg1 = stack.PeekValue(1);
			
			object arg2 = stack.PeekValue(2);
			
			object arg3 = stack.PeekValue(3);
			stack.RemoveFrame();
			return ((DOMNode)instance).setUserData(stack.Context, arg1, arg2, arg3);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public object compareDocumentPosition(ScriptContext __context, object anotherNode)
		{
			
			DOMNode tmp1 = anotherNode as DOMNode;
			if (tmp1 == null)

				{
					PhpException.InvalidImplicitCast(anotherNode, "DOMNode", "compareDocumentPosition");
					return null;
				}
			compareDocumentPosition(tmp1);
			return null;
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object compareDocumentPosition(object instance, PhpStack stack)
		{
			stack.CalleeName = "compareDocumentPosition";
			
			object arg1 = stack.PeekValue(1);
			stack.RemoveFrame();
			return ((DOMNode)instance).compareDocumentPosition(stack.Context, arg1);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public object isEqualNode(ScriptContext __context, object anotherNode)
		{
			
			DOMNode tmp1 = anotherNode as DOMNode;
			if (tmp1 == null)

				{
					PhpException.InvalidImplicitCast(anotherNode, "DOMNode", "isEqualNode");
					return null;
				}
			isEqualNode(tmp1);
			return null;
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object isEqualNode(object instance, PhpStack stack)
		{
			stack.CalleeName = "isEqualNode";
			
			object arg1 = stack.PeekValue(1);
			stack.RemoveFrame();
			return ((DOMNode)instance).isEqualNode(stack.Context, arg1);
		}
		private static void __PopulateTypeDesc(PhpTypeDesc desc)
		{
			desc.AddProperty("nodeName", PhpMemberAttributes.Public, new GetterDelegate(DOMNode.__get_nodeName), null);
			desc.AddProperty("nodeValue", PhpMemberAttributes.Public, new GetterDelegate(DOMNode.__get_nodeValue), new SetterDelegate(DOMNode.__set_nodeValue));
			desc.AddProperty("nodeType", PhpMemberAttributes.Public, new GetterDelegate(DOMNode.__get_nodeType), null);
			desc.AddProperty("parentNode", PhpMemberAttributes.Public, new GetterDelegate(DOMNode.__get_parentNode), null);
			desc.AddProperty("childNodes", PhpMemberAttributes.Public, new GetterDelegate(DOMNode.__get_childNodes), null);
			desc.AddProperty("firstChild", PhpMemberAttributes.Public, new GetterDelegate(DOMNode.__get_firstChild), null);
			desc.AddProperty("lastChild", PhpMemberAttributes.Public, new GetterDelegate(DOMNode.__get_lastChild), null);
			desc.AddProperty("previousSibling", PhpMemberAttributes.Public, new GetterDelegate(DOMNode.__get_previousSibling), null);
			desc.AddProperty("nextSibling", PhpMemberAttributes.Public, new GetterDelegate(DOMNode.__get_nextSibling), null);
			desc.AddProperty("attributes", PhpMemberAttributes.Public, new GetterDelegate(DOMNode.__get_attributes), null);
			desc.AddProperty("ownerDocument", PhpMemberAttributes.Public, new GetterDelegate(DOMNode.__get_ownerDocument), null);
			desc.AddProperty("namespaceURI", PhpMemberAttributes.Public, new GetterDelegate(DOMNode.__get_namespaceURI), null);
			desc.AddProperty("prefix", PhpMemberAttributes.Public, new GetterDelegate(DOMNode.__get_prefix), new SetterDelegate(DOMNode.__set_prefix));
			desc.AddProperty("localName", PhpMemberAttributes.Public, new GetterDelegate(DOMNode.__get_localName), null);
			desc.AddProperty("baseURI", PhpMemberAttributes.Public, new GetterDelegate(DOMNode.__get_baseURI), null);
			desc.AddProperty("textContent", PhpMemberAttributes.Public, new GetterDelegate(DOMNode.__get_textContent), new SetterDelegate(DOMNode.__set_textContent));
			desc.AddMethod("insertBefore", PhpMemberAttributes.Public, new RoutineDelegate(DOMNode.insertBefore));
			desc.AddMethod("replaceChild", PhpMemberAttributes.Public, new RoutineDelegate(DOMNode.replaceChild));
			desc.AddMethod("appendChild", PhpMemberAttributes.Public, new RoutineDelegate(DOMNode.appendChild));
			desc.AddMethod("removeChild", PhpMemberAttributes.Public, new RoutineDelegate(DOMNode.removeChild));
			desc.AddMethod("hasChildNodes", PhpMemberAttributes.Public, new RoutineDelegate(DOMNode.hasChildNodes));
			desc.AddMethod("hasAttributes", PhpMemberAttributes.Public, new RoutineDelegate(DOMNode.hasAttributes));
			desc.AddMethod("lookupPrefix", PhpMemberAttributes.Public, new RoutineDelegate(DOMNode.lookupPrefix));
			desc.AddMethod("lookupNamespaceUri", PhpMemberAttributes.Public, new RoutineDelegate(DOMNode.lookupNamespaceUri));
			desc.AddMethod("isDefaultNamespace", PhpMemberAttributes.Public, new RoutineDelegate(DOMNode.isDefaultNamespace));
			desc.AddMethod("normalize", PhpMemberAttributes.Public, new RoutineDelegate(DOMNode.normalize));
			desc.AddMethod("cloneNode", PhpMemberAttributes.Public, new RoutineDelegate(DOMNode.cloneNode));
			desc.AddMethod("isSameNode", PhpMemberAttributes.Public, new RoutineDelegate(DOMNode.isSameNode));
			desc.AddMethod("isSupported", PhpMemberAttributes.Public, new RoutineDelegate(DOMNode.isSupported));
			desc.AddMethod("getFeature", PhpMemberAttributes.Public, new RoutineDelegate(DOMNode.getFeature));
			desc.AddMethod("getUserData", PhpMemberAttributes.Public, new RoutineDelegate(DOMNode.getUserData));
			desc.AddMethod("setUserData", PhpMemberAttributes.Public, new RoutineDelegate(DOMNode.setUserData));
			desc.AddMethod("compareDocumentPosition", PhpMemberAttributes.Public, new RoutineDelegate(DOMNode.compareDocumentPosition));
			desc.AddMethod("isEqualNode", PhpMemberAttributes.Public, new RoutineDelegate(DOMNode.isEqualNode));
		}
	}
}
