// ***
// Do not edit this file. It has been generated by the ClassDynamizer tool.
// ***
#pragma warning disable 0108
using PHP.Core.Reflection;
using System;
using System.Xml;
using System.Xml.Schema;
using System.Text;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using PHP.Core;
namespace PHP.Library.Xml
{
	[Serializable()]
	public partial class DOMImplementation : PhpObject
	{
		protected DOMImplementation(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : base(info, context)
		{
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public DOMImplementation(ScriptContext context, bool newInstance) : base(context, newInstance)
		{
			XmlImplementation = new XmlImplementation();
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public DOMImplementation(ScriptContext context, DTypeDesc caller) : this(context, true)
		{
			this.InvokeConstructor(context, caller);
		}
		public static object getFeature(ScriptContext __context, object instance, object feature, object version)
		{
			
			DOMImplementation tmp1 = instance as DOMImplementation;
			if (tmp1 == null && instance != null)

				{
					PhpException.InvalidImplicitCast(instance, "DOMImplementation", "getFeature");
					return null;
				}
			
			string tmp2 = PhpVariable.AsString(feature);
			if (tmp2 == null)

				{
					PhpException.InvalidImplicitCast(feature, "string", "getFeature");
					return null;
				}
			
			string tmp3 = PhpVariable.AsString(version);
			if (tmp3 == null)

				{
					PhpException.InvalidImplicitCast(version, "string", "getFeature");
					return null;
				}
			getFeature(tmp1, tmp2, tmp3);
			return null;
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object getFeature(ScriptContext __context, object feature, object version)
		{
			
			string tmp2 = PhpVariable.AsString(feature);
			if (tmp2 == null)

				{
					PhpException.InvalidImplicitCast(feature, "string", "getFeature");
					return null;
				}
			
			string tmp3 = PhpVariable.AsString(version);
			if (tmp3 == null)

				{
					PhpException.InvalidImplicitCast(version, "string", "getFeature");
					return null;
				}
			getFeature(null, tmp2, tmp3);
			return null;
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object getFeature(object instance, PhpStack stack)
		{
			stack.CalleeName = "getFeature";
			
			object arg1 = instance;
			
			object arg2 = stack.PeekValue(1);
			
			object arg3 = stack.PeekValue(2);
			stack.RemoveFrame();
			return getFeature(stack.Context, arg1, arg2, arg3);
		}
		public static object hasFeature(ScriptContext __context, object instance, object feature, object version)
		{
			
			DOMImplementation tmp1 = instance as DOMImplementation;
			if (tmp1 == null && instance != null)

				{
					PhpException.InvalidImplicitCast(instance, "DOMImplementation", "hasFeature");
					return null;
				}
			
			string tmp2 = PhpVariable.AsString(feature);
			if (tmp2 == null)

				{
					PhpException.InvalidImplicitCast(feature, "string", "hasFeature");
					return null;
				}
			
			string tmp3 = PhpVariable.AsString(version);
			if (tmp3 == null)

				{
					PhpException.InvalidImplicitCast(version, "string", "hasFeature");
					return null;
				}
			return hasFeature(tmp1, tmp2, tmp3);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object hasFeature(ScriptContext __context, object feature, object version)
		{
			
			string tmp2 = PhpVariable.AsString(feature);
			if (tmp2 == null)

				{
					PhpException.InvalidImplicitCast(feature, "string", "hasFeature");
					return null;
				}
			
			string tmp3 = PhpVariable.AsString(version);
			if (tmp3 == null)

				{
					PhpException.InvalidImplicitCast(version, "string", "hasFeature");
					return null;
				}
			return hasFeature(null, tmp2, tmp3);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object hasFeature(object instance, PhpStack stack)
		{
			stack.CalleeName = "hasFeature";
			
			object arg1 = instance;
			
			object arg2 = stack.PeekValue(1);
			
			object arg3 = stack.PeekValue(2);
			stack.RemoveFrame();
			return hasFeature(stack.Context, arg1, arg2, arg3);
		}
		public static object createDocumentType(ScriptContext __context, object instance, object qualifiedName, object publicId, object systemId)
		{
			
			DOMImplementation tmp1 = instance as DOMImplementation;
			if (tmp1 == null && instance != null)

				{
					PhpException.InvalidImplicitCast(instance, "DOMImplementation", "createDocumentType");
					return null;
				}
			
			string tmp2 = PhpVariable.AsString(qualifiedName);
			if (tmp2 == null)

				{
					PhpException.InvalidImplicitCast(qualifiedName, "string", "createDocumentType");
					return null;
				}
			
			string tmp3 = PhpVariable.AsString(publicId);
			if (tmp3 == null)

				{
					PhpException.InvalidImplicitCast(publicId, "string", "createDocumentType");
					return null;
				}
			
			string tmp4 = PhpVariable.AsString(systemId);
			if (tmp4 == null)

				{
					PhpException.InvalidImplicitCast(systemId, "string", "createDocumentType");
					return null;
				}
			return createDocumentType(tmp1, tmp2, tmp3, tmp4);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object createDocumentType(ScriptContext __context, object qualifiedName, object publicId, object systemId)
		{
			
			string tmp2 = PhpVariable.AsString(qualifiedName);
			if (tmp2 == null)

				{
					PhpException.InvalidImplicitCast(qualifiedName, "string", "createDocumentType");
					return null;
				}
			
			string tmp3 = PhpVariable.AsString(publicId);
			if (tmp3 == null)

				{
					PhpException.InvalidImplicitCast(publicId, "string", "createDocumentType");
					return null;
				}
			
			string tmp4 = PhpVariable.AsString(systemId);
			if (tmp4 == null)

				{
					PhpException.InvalidImplicitCast(systemId, "string", "createDocumentType");
					return null;
				}
			return createDocumentType(null, tmp2, tmp3, tmp4);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object createDocumentType(object instance, PhpStack stack)
		{
			stack.CalleeName = "createDocumentType";
			
			object arg1 = instance;
			
			object arg2 = stack.PeekValue(1);
			
			object arg3 = stack.PeekValue(2);
			
			object arg4 = stack.PeekValue(3);
			stack.RemoveFrame();
			return createDocumentType(stack.Context, arg1, arg2, arg3, arg4);
		}
		public static object createDocument(ScriptContext __context, object instance, object namespaceUri, object qualifiedName, object docType)
		{
			
			DOMImplementation tmp1 = instance as DOMImplementation;
			if (tmp1 == null && instance != null)

				{
					PhpException.InvalidImplicitCast(instance, "DOMImplementation", "createDocument");
					return null;
				}
			
			string tmp2 = PhpVariable.AsString(namespaceUri);
			if (tmp2 == null)

				{
					PhpException.InvalidImplicitCast(namespaceUri, "string", "createDocument");
					return null;
				}
			
			string tmp3 = PhpVariable.AsString(qualifiedName);
			if (tmp3 == null)

				{
					PhpException.InvalidImplicitCast(qualifiedName, "string", "createDocument");
					return null;
				}
			
			DOMDocumentType tmp4 = docType as DOMDocumentType;
			if (tmp4 == null && docType != null)

				{
					PhpException.InvalidImplicitCast(docType, "DOMDocumentType", "createDocument");
					return null;
				}
			return createDocument(tmp1, tmp2, tmp3, tmp4);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object createDocument(ScriptContext __context, object namespaceUri, object qualifiedName, object docType)
		{
			
			string tmp2 = PhpVariable.AsString(namespaceUri);
			if (tmp2 == null)

				{
					PhpException.InvalidImplicitCast(namespaceUri, "string", "createDocument");
					return null;
				}
			
			string tmp3 = PhpVariable.AsString(qualifiedName);
			if (tmp3 == null)

				{
					PhpException.InvalidImplicitCast(qualifiedName, "string", "createDocument");
					return null;
				}
			
			DOMDocumentType tmp4 = docType as DOMDocumentType;
			if (tmp4 == null && docType != null)

				{
					PhpException.InvalidImplicitCast(docType, "DOMDocumentType", "createDocument");
					return null;
				}
			return createDocument(null, tmp2, tmp3, tmp4);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object createDocument(object instance, PhpStack stack)
		{
			stack.CalleeName = "createDocument";
			
			object arg1 = instance;
			
			object arg2 = stack.PeekValue(1);
			
			object arg3 = stack.PeekValue(2);
			
			object arg4 = stack.PeekValue(3);
			stack.RemoveFrame();
			return createDocument(stack.Context, arg1, arg2, arg3, arg4);
		}
		private static void __PopulateTypeDesc(PhpTypeDesc desc)
		{
			desc.AddMethod("getFeature", PhpMemberAttributes.Public | PhpMemberAttributes.Static, new RoutineDelegate(DOMImplementation.getFeature));
			desc.AddMethod("hasFeature", PhpMemberAttributes.Public | PhpMemberAttributes.Static, new RoutineDelegate(DOMImplementation.hasFeature));
			desc.AddMethod("createDocumentType", PhpMemberAttributes.Public | PhpMemberAttributes.Static, new RoutineDelegate(DOMImplementation.createDocumentType));
			desc.AddMethod("createDocument", PhpMemberAttributes.Public | PhpMemberAttributes.Static, new RoutineDelegate(DOMImplementation.createDocument));
		}
	}
	[Serializable()]
	public partial class DOMImplementationSource : PhpObject
	{
		protected DOMImplementationSource(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : base(info, context)
		{
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public DOMImplementationSource(ScriptContext context, bool newInstance) : base(context, newInstance)
		{
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public DOMImplementationSource(ScriptContext context, DTypeDesc caller) : this(context, true)
		{
			this.InvokeConstructor(context, caller);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public object getDomimplementation(ScriptContext __context, object features)
		{
			
			string tmp1 = PhpVariable.AsString(features);
			if (tmp1 == null)

				{
					PhpException.InvalidImplicitCast(features, "string", "getDomimplementation");
					return null;
				}
			getDomimplementation(tmp1);
			return null;
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object getDomimplementation(object instance, PhpStack stack)
		{
			stack.CalleeName = "getDomimplementation";
			
			object arg1 = stack.PeekValue(1);
			stack.RemoveFrame();
			return ((DOMImplementationSource)instance).getDomimplementation(stack.Context, arg1);
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public object getDomimplementations(ScriptContext __context, object features)
		{
			
			string tmp1 = PhpVariable.AsString(features);
			if (tmp1 == null)

				{
					PhpException.InvalidImplicitCast(features, "string", "getDomimplementations");
					return null;
				}
			getDomimplementations(tmp1);
			return null;
		}
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public static object getDomimplementations(object instance, PhpStack stack)
		{
			stack.CalleeName = "getDomimplementations";
			
			object arg1 = stack.PeekValue(1);
			stack.RemoveFrame();
			return ((DOMImplementationSource)instance).getDomimplementations(stack.Context, arg1);
		}
		private static void __PopulateTypeDesc(PhpTypeDesc desc)
		{
			desc.AddMethod("getDomimplementation", PhpMemberAttributes.Public, new RoutineDelegate(DOMImplementationSource.getDomimplementation));
			desc.AddMethod("getDomimplementations", PhpMemberAttributes.Public, new RoutineDelegate(DOMImplementationSource.getDomimplementations));
		}
	}
}
